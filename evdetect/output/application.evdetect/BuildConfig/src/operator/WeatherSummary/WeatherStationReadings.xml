<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<operatorInstanceModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator/instance" xmlns:an="http://www.ibm.com/xmlns/prod/streams/spl/annotation" xmlns:tt="http://www.ibm.com/xmlns/prod/streams/spl/tupleType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <context>
    <kind>spl.relational::Functor</kind>
    <class>WeatherSummary::WeatherStationReadings</class>
    <operatorModelDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/spl/spl/relational/Functor</operatorModelDirectory>
    <applicationDirectory>/home/streamsadmin/workspace/evdetect</applicationDirectory>
    <dataDirectory>/home/streamsadmin/workspace/evdetect/data</dataDirectory>
    <outputDirectory>/home/streamsadmin/workspace/evdetect/output/application.evdetect/BuildConfig</outputDirectory>
    <toolkits>
      <toolkit isCurrentToolkit="false">
        <name>evdetect</name>
        <rootDirectory>/home/streamsadmin/workspace/evdetect</rootDirectory>
        <index>0</index>
      </toolkit>
      <toolkit isCurrentToolkit="true">
        <name>spl</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/spl</rootDirectory>
        <index>1</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.cep</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.cep</rootDirectory>
        <index>2</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.cybersecurity</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.cybersecurity</rootDirectory>
        <index>3</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.dataexplorer</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.dataexplorer</rootDirectory>
        <index>4</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.db</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.db</rootDirectory>
        <index>5</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.geospatial</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.geospatial</rootDirectory>
        <index>6</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.mining</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.mining</rootDirectory>
        <index>7</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.rproject</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.rproject</rootDirectory>
        <index>8</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.rules</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.rules</rootDirectory>
        <index>9</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.rulescompiler</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.rulescompiler</rootDirectory>
        <index>10</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.teda</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.teda</rootDirectory>
        <index>11</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.text</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.text</rootDirectory>
        <index>12</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streams.timeseries</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streams.timeseries</rootDirectory>
        <index>13</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.datetime</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.datetime</rootDirectory>
        <index>14</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.dps</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.dps</rootDirectory>
        <index>15</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.hbase</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.hbase</rootDirectory>
        <index>16</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.hdfs</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.hdfs</rootDirectory>
        <index>17</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.inet</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.inet</rootDirectory>
        <index>18</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.iot</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.iot</rootDirectory>
        <index>19</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.jdbc</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.jdbc</rootDirectory>
        <index>20</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.json</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.json</rootDirectory>
        <index>21</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.kafka</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.kafka</rootDirectory>
        <index>22</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.messagehub</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.messagehub</rootDirectory>
        <index>23</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.messaging</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.messaging</rootDirectory>
        <index>24</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.mqtt</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.mqtt</rootDirectory>
        <index>25</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.network</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.network</rootDirectory>
        <index>26</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.objectstorage</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.objectstorage</rootDirectory>
        <index>27</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.rabbitmq</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.rabbitmq</rootDirectory>
        <index>28</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.sparkmllib</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.sparkmllib</rootDirectory>
        <index>29</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.ibm.streamsx.topology</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.3.0.0/toolkits/com.ibm.streamsx.topology</rootDirectory>
        <index>30</index>
      </toolkit>
    </toolkits>
    <optimized>true</optimized>
    <verbose>false</verbose>
    <networkByteOrdering>false</networkByteOrdering>
    <codeBeautification>false</codeBeautification>
    <includes>
      <include>"../../type/BeJwdyEEOgkAMBdAzNWKcvSRojCu9wJB_0SANMJ22R6wss34vkRB45RMtdGU_06au_0w3zlfWTA0gaUOibFVlRIT3arBfTW8ZZ6lz_0YTpU0KP5BZythiNGDP5shPBfhVNPa4HNGtHqf_1l9IvDW.h"</include>
      <include>"../../type/BeJwrMSw2NClKLPdPKk4tKkssyczPAwBFJwdU.h"</include>
      <include>"../../type/BeJyrNI83NIkEAl9fF5eMjNzc4mJDSxA_13tc33sUlPiMjPjc3HiQI4YOlEIJAEaA4iqCRMRbtQDLXyBiLERAJLMaAJADJ9TeQ.h"</include>
    </includes>
    <stateVariables>
      <stateVariable>
        <name>state$locCode</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$46</cppExpression>
          <splExpression>""</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>application/evdetect.spl</file>
            <line>386</line>
            <column>50</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>application/evdetect.spl</file>
          <line>386</line>
          <column>40</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$obsTime</name>
        <cppType>SPL::int64</cppType>
        <splType>int64</splType>
        <value>
          <cppType>SPL::int64</cppType>
          <splType>int64</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$47</cppExpression>
          <splExpression>(int64)(0)</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>application/evdetect.spl</file>
            <line>387</line>
            <column>48</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>application/evdetect.spl</file>
          <line>387</line>
          <column>38</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$temp</name>
        <cppType>SPL::float32</cppType>
        <splType>float32</splType>
        <value>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$48</cppExpression>
          <splExpression>(float32)(-999)</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>application/evdetect.spl</file>
            <line>388</line>
            <column>47</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>application/evdetect.spl</file>
          <line>388</line>
          <column>40</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$dewp</name>
        <cppType>SPL::float32</cppType>
        <splType>float32</splType>
        <value>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$49</cppExpression>
          <splExpression>(float32)(-999)</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>application/evdetect.spl</file>
            <line>388</line>
            <column>62</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>application/evdetect.spl</file>
          <line>388</line>
          <column>55</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$press</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>
          <cppType>SPL::int16</cppType>
          <splType>int16</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$50</cppExpression>
          <splExpression>-999</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>application/evdetect.spl</file>
            <line>389</line>
            <column>46</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>application/evdetect.spl</file>
          <line>389</line>
          <column>38</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$wSpeed</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>
          <cppType>SPL::int16</cppType>
          <splType>int16</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$51</cppExpression>
          <splExpression>-999</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>application/evdetect.spl</file>
            <line>389</line>
            <column>62</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>application/evdetect.spl</file>
          <line>389</line>
          <column>53</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$wHeading</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>
          <cppType>SPL::int16</cppType>
          <splType>int16</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$52</cppExpression>
          <splExpression>-999</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>application/evdetect.spl</file>
            <line>389</line>
            <column>80</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>application/evdetect.spl</file>
          <line>389</line>
          <column>69</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$wGust</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>
          <cppType>SPL::int16</cppType>
          <splType>int16</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$53</cppExpression>
          <splExpression>-999</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>application/evdetect.spl</file>
            <line>389</line>
            <column>94</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>application/evdetect.spl</file>
          <line>389</line>
          <column>86</column>
        </sourceLocation>
      </stateVariable>
    </stateVariables>
    <runtimeConstants>
      <runtimeConstant>
        <name>lit$0</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>""</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$1</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>""</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$2</name>
        <cppType>SPL::int64</cppType>
        <splType>int64</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$3</name>
        <cppType>SPL::float32</cppType>
        <splType>float32</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$4</name>
        <cppType>SPL::float32</cppType>
        <splType>float32</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$5</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$6</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$7</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$8</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$9</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"([0-9]{4}/[0-9]{2}/[0-9]{2} [0-9]{2}:[0-9]{2}) ([[:alnum:]]{4}) ([0-9]{6}.)(.*)"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$10</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>4</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$11</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>" "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$12</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>4</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$13</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>2</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$14</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>":00"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$15</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>1</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$16</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"GMT"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$17</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>" (M?)([0-9]{2})/((M?)([0-9]{2}))? "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$18</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$19</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>2</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$20</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"M"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$21</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>1</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$22</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>4</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$23</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>5</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$24</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"M"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$25</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>4</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$26</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>" ([0-9]{3}|VRB)([0-9]{2,3})(G([0-9]{2,3}))?(KT|MPS) "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$27</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$28</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"VRB"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$29</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>1</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$30</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>1</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$31</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>-1</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$32</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>2</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$33</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>1</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$34</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>5</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$35</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>4</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$36</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"MPS"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$37</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>1.9438445</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$38</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>1.9438445</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$39</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>" (A)([0-9]{4}) "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$40</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$41</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>0.3386</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$42</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>2</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$43</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>" (Q)([0-9]{3,4}) "</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$44</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$45</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>2</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$46</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>""</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$47</name>
        <cppType>SPL::int64</cppType>
        <splType>int64</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$48</name>
        <cppType>SPL::float32</cppType>
        <splType>float32</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$49</name>
        <cppType>SPL::float32</cppType>
        <splType>float32</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$50</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$51</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$52</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>-999</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$53</name>
        <cppType>SPL::int16</cppType>
        <splType>int16</splType>
        <value>-999</value>
      </runtimeConstant>
    </runtimeConstants>
    <sourceLocation>
      <file>application/evdetect.spl</file>
      <line>384</line>
      <column>5</column>
    </sourceLocation>
    <productVersion>4.3.0.0</productVersion>
    <checkpointKind>none</checkpointKind>
  </context>

  <parameters/>

  <inputPorts>
    <inputPort>
      <index>0</index>
      <tupleCppName>iport$0</tupleCppName>
      <tupleCppType>SPL::BeJwrMSw2NClKLPdPKk4tKkssyczPAwBFJwdU</tupleCppType>
      <tupleSPLType>tuple&lt;rstring rawObservation&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>application/evdetect.spl</file>
        <line>384</line>
        <column>68</column>
      </sourceLocation>
      <tupleLogic>{
    SPL::rstring id$obsData = lit$0;
    state$locCode = lit$1;
    state$obsTime = lit$2;
    state$temp = lit$3;
    state$dewp = lit$4;
    state$press = lit$5;
    state$wSpeed = lit$6;
    state$wHeading = lit$7;
    state$wGust = lit$8;
    const SPL::list&lt;SPL::rstring &gt; id$stationInfo = ::SPL::Functions::String::regexMatch(iport$0.get_rawObservation(), lit$9);
    if ((::SPL::Functions::Collections::size(id$stationInfo) &gt; lit$10)) 
        {
            id$obsData = (id$stationInfo.at(lit$12) + lit$11);
            state$locCode = id$stationInfo.at(lit$13);
            const SPL::rstring id$ymdhms = (id$stationInfo.at(lit$15) + lit$14);
            const SPL::timestamp id$ts = ::SPL::Functions::Time::toTimestamp(SPL::BeJyrNI83NIkEAl9fF5eMjNzc4mJDSxA_13tc33sUlPiMjPjc3HiQI4YOlEIJAEaA4iqCRMRbtQDLXyBiLERAJLMaAJADJ9TeQ::YYYY_MM_DD_hh_mm_ss, id$ymdhms, lit$16);
            state$obsTime = ::SPL::Functions::Time::getSeconds(id$ts);
        }
    const SPL::list&lt;SPL::rstring &gt; id$temp_dewpoint = ::SPL::Functions::String::regexMatch(id$obsData, lit$17);
    if ((::SPL::Functions::Collections::size(id$temp_dewpoint) &gt; lit$18)) 
        {
            state$temp = ::SPL::spl_cast&lt;SPL::float32, SPL::rstring &gt;::cast(id$temp_dewpoint.at(lit$19));
            if ((id$temp_dewpoint.at(lit$21) == lit$20)) 
                state$temp = -state$temp;
            if ((::SPL::Functions::Collections::size(id$temp_dewpoint) &gt; lit$22)) 
                {
                    state$dewp = ::SPL::spl_cast&lt;SPL::float32, SPL::rstring &gt;::cast(id$temp_dewpoint.at(lit$23));
                    if ((id$temp_dewpoint.at(lit$25) == lit$24)) 
                        state$dewp = -state$dewp;
                }
        }
    const SPL::list&lt;SPL::rstring &gt; id$wind = ::SPL::Functions::String::regexMatch(id$obsData, lit$26);
    if ((::SPL::Functions::Collections::size(id$wind) &gt; lit$27)) 
        {
            if ((id$wind.at(lit$29) != lit$28)) 
                state$wHeading = ::SPL::spl_cast&lt;SPL::int16, SPL::rstring &gt;::cast(id$wind.at(lit$30));
            else
                state$wHeading = lit$31;
            state$wSpeed = ::SPL::spl_cast&lt;SPL::int16, SPL::rstring &gt;::cast(id$wind.at(lit$32));
            state$wGust = state$wSpeed;
            const SPL::int32 id$unitIndex = SPL::int32(::SPL::Functions::Collections::size(id$wind) - lit$33);
            if ((::SPL::Functions::Collections::size(id$wind) &gt; lit$34)) 
                state$wGust = ::SPL::spl_cast&lt;SPL::int16, SPL::rstring &gt;::cast(id$wind.at(lit$35));
            if ((id$wind.at(id$unitIndex) == lit$36)) 
                {
                    state$wSpeed = ::SPL::spl_cast&lt;SPL::int16, SPL::float64 &gt;::cast((::SPL::spl_cast&lt;SPL::float64, SPL::int16 &gt;::cast(state$wSpeed) * lit$37));
                    state$wGust = ::SPL::spl_cast&lt;SPL::int16, SPL::float64 &gt;::cast((::SPL::spl_cast&lt;SPL::float64, SPL::int16 &gt;::cast(state$wGust) * lit$38));
                }
        }
    const SPL::list&lt;SPL::rstring &gt; id$baroA = ::SPL::Functions::String::regexMatch(id$obsData, lit$39);
    if ((::SPL::Functions::Collections::size(id$baroA) &gt; lit$40)) 
        state$press = ::SPL::spl_cast&lt;SPL::int16, SPL::float64 &gt;::cast((::SPL::spl_cast&lt;SPL::float64, SPL::rstring &gt;::cast(id$baroA.at(lit$42)) * lit$41));
    else
        {
            const SPL::list&lt;SPL::rstring &gt; id$baroQ = ::SPL::Functions::String::regexMatch(id$obsData, lit$43);
            if ((::SPL::Functions::Collections::size(id$baroQ) &gt; lit$44)) 
                state$press = ::SPL::spl_cast&lt;SPL::int16, SPL::rstring &gt;::cast(id$baroQ.at(lit$45));
        }
}
</tupleLogic>
      <attributes>
        <attribute>
          <name>rawObservation</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="rawObservation" type="rstring"/>
      </tuple>
    </inputPort>
  </inputPorts>

  <outputPorts>
    <outputPort>
      <index>0</index>
      <tupleCppName>oport$0</tupleCppName>
      <tupleCppType>SPL::BeJwdyEEOgkAMBdAzNWKcvSRojCu9wJB_0SANMJ22R6wss34vkRB45RMtdGU_06au_0w3zlfWTA0gaUOibFVlRIT3arBfTW8ZZ6lz_0YTpU0KP5BZythiNGDP5shPBfhVNPa4HNGtHqf_1l9IvDW</tupleCppType>
      <tupleSPLType>tuple&lt;rstring stationCode,int64 observationTime,float32 temp,float32 dewpoint,int16 pressureMillibars,int16 windHeadingDegrees,int16 windSpeedKnots,int16 windGustKnots&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>true</mutationAllowed>
      <sourceLocation>
        <file>application/evdetect.spl</file>
        <line>384</line>
        <column>5</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>stationCode</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <assignment>
            <sourceLocation>
              <file>application/evdetect.spl</file>
              <line>462</line>
              <column>40</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::rstring</cppType>
                <splType>rstring</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>state$locCode</cppExpression>
                <splExpression>locCode</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>true</readsState>
                <hasStreamAttributes>false</hasStreamAttributes>
                <sourceLocation>
                  <file>application/evdetect.spl</file>
                  <line>462</line>
                  <column>54</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>observationTime</name>
          <cppType>SPL::int64</cppType>
          <splType>int64</splType>
          <assignment>
            <sourceLocation>
              <file>application/evdetect.spl</file>
              <line>463</line>
              <column>40</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::int64</cppType>
                <splType>int64</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>state$obsTime</cppExpression>
                <splExpression>obsTime</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>true</readsState>
                <hasStreamAttributes>false</hasStreamAttributes>
                <sourceLocation>
                  <file>application/evdetect.spl</file>
                  <line>463</line>
                  <column>58</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>temp</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>application/evdetect.spl</file>
              <line>464</line>
              <column>40</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>state$temp</cppExpression>
                <splExpression>temp</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>true</readsState>
                <hasStreamAttributes>false</hasStreamAttributes>
                <sourceLocation>
                  <file>application/evdetect.spl</file>
                  <line>464</line>
                  <column>47</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>dewpoint</name>
          <cppType>SPL::float32</cppType>
          <splType>float32</splType>
          <assignment>
            <sourceLocation>
              <file>application/evdetect.spl</file>
              <line>465</line>
              <column>40</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::float32</cppType>
                <splType>float32</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>state$dewp</cppExpression>
                <splExpression>dewp</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>true</readsState>
                <hasStreamAttributes>false</hasStreamAttributes>
                <sourceLocation>
                  <file>application/evdetect.spl</file>
                  <line>465</line>
                  <column>51</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>pressureMillibars</name>
          <cppType>SPL::int16</cppType>
          <splType>int16</splType>
          <assignment>
            <sourceLocation>
              <file>application/evdetect.spl</file>
              <line>466</line>
              <column>40</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::int16</cppType>
                <splType>int16</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>state$press</cppExpression>
                <splExpression>press</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>true</readsState>
                <hasStreamAttributes>false</hasStreamAttributes>
                <sourceLocation>
                  <file>application/evdetect.spl</file>
                  <line>466</line>
                  <column>60</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>windHeadingDegrees</name>
          <cppType>SPL::int16</cppType>
          <splType>int16</splType>
          <assignment>
            <sourceLocation>
              <file>application/evdetect.spl</file>
              <line>467</line>
              <column>40</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::int16</cppType>
                <splType>int16</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>state$wHeading</cppExpression>
                <splExpression>wHeading</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>true</readsState>
                <hasStreamAttributes>false</hasStreamAttributes>
                <sourceLocation>
                  <file>application/evdetect.spl</file>
                  <line>467</line>
                  <column>61</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>windSpeedKnots</name>
          <cppType>SPL::int16</cppType>
          <splType>int16</splType>
          <assignment>
            <sourceLocation>
              <file>application/evdetect.spl</file>
              <line>468</line>
              <column>40</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::int16</cppType>
                <splType>int16</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>state$wSpeed</cppExpression>
                <splExpression>wSpeed</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>true</readsState>
                <hasStreamAttributes>false</hasStreamAttributes>
                <sourceLocation>
                  <file>application/evdetect.spl</file>
                  <line>468</line>
                  <column>57</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>windGustKnots</name>
          <cppType>SPL::int16</cppType>
          <splType>int16</splType>
          <assignment>
            <sourceLocation>
              <file>application/evdetect.spl</file>
              <line>469</line>
              <column>40</column>
            </sourceLocation>
            <values>
              <value>
                <cppType>SPL::int16</cppType>
                <splType>int16</splType>
                <hasRuntimeConstant>false</hasRuntimeConstant>
                <cppExpression>state$wGust</cppExpression>
                <splExpression>wGust</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>true</readsState>
                <hasStreamAttributes>false</hasStreamAttributes>
                <sourceLocation>
                  <file>application/evdetect.spl</file>
                  <line>469</line>
                  <column>56</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="stationCode" type="rstring"/>
        <tt:attr name="observationTime" type="int64"/>
        <tt:attr name="temp" type="float32"/>
        <tt:attr name="dewpoint" type="float32"/>
        <tt:attr name="pressureMillibars" type="int16"/>
        <tt:attr name="windHeadingDegrees" type="int16"/>
        <tt:attr name="windSpeedKnots" type="int16"/>
        <tt:attr name="windGustKnots" type="int16"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
    </outputPort>
  </outputPorts>

</operatorInstanceModel>
